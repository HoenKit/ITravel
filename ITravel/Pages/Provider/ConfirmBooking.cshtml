@page
@model ITravel.Pages.Provider.ConfirmBookingModel
@{
    ViewData["Title"] = "Xác nhận Đặt chỗ";
}

<div class="container mt-5">
    <div class="card p-4 shadow-sm">
        <h2 class="text-center mb-4">Chụp hoặc Chọn Ảnh Mã QR</h2>

        <!-- Form -->
        <form method="post" enctype="multipart/form-data">
            @if (ModelState.ErrorCount > 0)
            {
                <div class="alert alert-danger mt-3">
                    @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }

        @if (Model.Result != null)
        {
            <div class="alert alert-success mt-3">
                <h4 class="alert-heading">Kết quả mã QR:</h4>
                <p>@Model.Result</p>
            </div>
        }
            <!-- Chụp ảnh bằng camera -->
            <div class="mb-3">
                <label class="form-label">Chụp ảnh bằng camera:</label>
                <video id="video" autoplay class="w-100 mb-2" style="border: 1px solid #ccc;"></video>
                <button type="button" id="capture" class="btn btn-secondary w-100 mb-3">Chụp Ảnh</button>
            </div>

            <!-- Hoặc chọn ảnh từ thư viện -->
            <div class="mb-3">
                <label for="fileInput" class="form-label">Hoặc chọn ảnh từ máy:</label>
                <input type="file" name="fileInput" id="fileInput" accept="image/*" class="form-control" />
            </div>

            <!-- Hiển thị ảnh chụp hoặc ảnh đã chọn -->
            <div class="mb-3">
                <img id="preview" class="img-fluid" style="display: none; border: 1px solid #ccc;" />
            </div>

            <!-- Input ẩn để lưu ảnh chụp -->
            <input type="hidden" name="qrCodeImage" id="qrCodeImageInput" />

            <button type="submit" class="btn btn-primary w-100">Gửi</button>
        </form>
    </div>
</div>
<script>
    // Lấy tham chiếu tới các phần tử
    const video = document.getElementById('video');
    const canvas = document.createElement('canvas');
    const captureButton = document.getElementById('capture');
    const fileInput = document.getElementById('fileInput');
    const qrCodeImageInput = document.getElementById('qrCodeImageInput');
    const preview = document.getElementById('preview');

    // Yêu cầu truy cập camera
    navigator.mediaDevices.getUserMedia({ video: true })
        .then((stream) => {
            video.srcObject = stream;
        })
        .catch((error) => {
            console.error("Lỗi khi truy cập camera:", error);
            alert("Không thể truy cập camera. Vui lòng kiểm tra cài đặt thiết bị.");
        });

    // Chụp ảnh khi nhấn nút "Chụp Ảnh"
    captureButton.addEventListener('click', () => {
        const context = canvas.getContext('2d');
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;

        // Vẽ hình ảnh từ video vào canvas
        context.drawImage(video, 0, 0, canvas.width, canvas.height);

        // Lấy dữ liệu ảnh dưới dạng base64
        const imageData = canvas.toDataURL('image/png');

        // Hiển thị ảnh chụp
        preview.src = imageData;
        preview.style.display = 'block';

        // Gán dữ liệu base64 vào input ẩn để gửi qua form
        qrCodeImageInput.value = imageData;
    });

    // Hiển thị ảnh đã chọn từ thư viện
    fileInput.addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                preview.src = e.target.result;
                preview.style.display = 'block';

                // Gán dữ liệu base64 vào input ẩn để gửi qua form
                qrCodeImageInput.value = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    });

</script>






